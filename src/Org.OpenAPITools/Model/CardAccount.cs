/*
 * Token Connect API
 *
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed. All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded. All request and response parameters are case sensitive. 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CardAccount
    /// </summary>
    [DataContract(Name = "CardAccount")]
    public partial class CardAccount : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CardAccount" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CardAccount() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CardAccount" /> class.
        /// </summary>
        /// <param name="accountNumber">The Account Primary Account Number of the card to be digitized. __Max length:__ 19 -  __Min length:__ 9. __Data Type:__ String (Numeric)  (required).</param>
        /// <param name="expiryMonth">The month of the expiration date of the card to be digitized. Note that the expiry date may not be in the past. May be omitted if the card does not have an expiry date. __Length:__ 2 __Data Type:__ String (Numeric) .</param>
        /// <param name="expiryYear">The year of the expiration date of the card to be digitized. Note that the expiry date may not be in the past. May be omitted if the card does not have an expiry date. __Length:__ 2 __Data Type:__ String (Numeric) .</param>
        public CardAccount(string accountNumber = default(string), string expiryMonth = default(string), string expiryYear = default(string))
        {
            // to ensure "accountNumber" is required (not null)
            if (accountNumber == null)
            {
                throw new ArgumentNullException("accountNumber is a required property for CardAccount and cannot be null");
            }
            this.accountNumber = accountNumber;
            this.expiryMonth = expiryMonth;
            this.expiryYear = expiryYear;
        }

        /// <summary>
        /// The Account Primary Account Number of the card to be digitized. __Max length:__ 19 -  __Min length:__ 9. __Data Type:__ String (Numeric) 
        /// </summary>
        /// <value>The Account Primary Account Number of the card to be digitized. __Max length:__ 19 -  __Min length:__ 9. __Data Type:__ String (Numeric) </value>
        /// <example>5123456789012345</example>
        [DataMember(Name = "accountNumber", IsRequired = true, EmitDefaultValue = true)]
        public string accountNumber { get; set; }

        /// <summary>
        /// The month of the expiration date of the card to be digitized. Note that the expiry date may not be in the past. May be omitted if the card does not have an expiry date. __Length:__ 2 __Data Type:__ String (Numeric) 
        /// </summary>
        /// <value>The month of the expiration date of the card to be digitized. Note that the expiry date may not be in the past. May be omitted if the card does not have an expiry date. __Length:__ 2 __Data Type:__ String (Numeric) </value>
        /// <example>12</example>
        [DataMember(Name = "expiryMonth", EmitDefaultValue = false)]
        public string expiryMonth { get; set; }

        /// <summary>
        /// The year of the expiration date of the card to be digitized. Note that the expiry date may not be in the past. May be omitted if the card does not have an expiry date. __Length:__ 2 __Data Type:__ String (Numeric) 
        /// </summary>
        /// <value>The year of the expiration date of the card to be digitized. Note that the expiry date may not be in the past. May be omitted if the card does not have an expiry date. __Length:__ 2 __Data Type:__ String (Numeric) </value>
        /// <example>21</example>
        [DataMember(Name = "expiryYear", EmitDefaultValue = false)]
        public string expiryYear { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CardAccount {\n");
            sb.Append("  accountNumber: ").Append(accountNumber).Append("\n");
            sb.Append("  expiryMonth: ").Append(expiryMonth).Append("\n");
            sb.Append("  expiryYear: ").Append(expiryYear).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
