/*
 * Mastercard Digital Enablement Service Issuer Outbound API
 *
 * The MDES Issuer Outbound Pre-Digitization API supports the pre-digitization web services provided by the Digitization Service. The web services are used to inform Issuers of MDES services being requested by, or on-behalf of, their account holders. Issuers may provide information in their responses to guide or inform the Account holderâ€™s experience through the Token Reqestor.
 *
 * The version of the OpenAPI document: 2.0.21 (Document version)
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// The activation methods to be used for this digitization.
    /// </summary>
    [DataContract(Name = "activationMethod")]
    public partial class ActivationMethod : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivationMethod" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected ActivationMethod() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="ActivationMethod" /> class.
        /// </summary>
        /// <param name="type">Specifies the activation method type.   Must be one of    * TEXT_TO_CARDHOLDER_NUMBER &#x3D; Text message to Account holder&#39;s mobile phone number. Value will be the Account holder&#39;s masked mobile phone number   * EMAIL_TO_CARDHOLDER_ADDRESS &#x3D; Email to Account holder&#39;s email address. Value will be the Account holder&#39;s masked email address   * CARDHOLDER_TO_CALL_AUTOMATED_NUMBER &#x3D; Account holder-initiated call to automated call center phone number. Value will be the phone number for the Account holder to call    * CARDHOLDER_TO_CALL_MANNED_NUMBER &#x3D; Account holder-initiated call to manned call center phone number. Value will be the phone number for the Account holder to call   * CARDHOLDER_TO_VISIT_WEBSITE &#x3D;  Account holder to visit a website. Value will be the website URL   * CARDHOLDER_TO_USE_MOBILE_APP &#x3D; Account holder to use a specific mobile app to activate token. Value will be replaced by a formatted string   * ISSUER_TO_CALL_CARDHOLDER_NUMBER &#x3D; Issuer-initiated voice call to Account holder&#39;s phone. Value will be the Account holder&#39;s masked voice call phone number.   (required).</param>
        /// <param name="value">Specifies the activation method value (meaning varies depending on the activation method type). (required).</param>
        public ActivationMethod(string type = default(string), string value = default(string))
        {
            // to ensure "type" is required (not null)
            if (type == null)
            {
                throw new ArgumentNullException("type is a required property for ActivationMethod and cannot be null");
            }
            this.type = type;
            // to ensure "value" is required (not null)
            if (value == null)
            {
                throw new ArgumentNullException("value is a required property for ActivationMethod and cannot be null");
            }
            this.value = value;
        }

        /// <summary>
        /// Specifies the activation method type.   Must be one of    * TEXT_TO_CARDHOLDER_NUMBER &#x3D; Text message to Account holder&#39;s mobile phone number. Value will be the Account holder&#39;s masked mobile phone number   * EMAIL_TO_CARDHOLDER_ADDRESS &#x3D; Email to Account holder&#39;s email address. Value will be the Account holder&#39;s masked email address   * CARDHOLDER_TO_CALL_AUTOMATED_NUMBER &#x3D; Account holder-initiated call to automated call center phone number. Value will be the phone number for the Account holder to call    * CARDHOLDER_TO_CALL_MANNED_NUMBER &#x3D; Account holder-initiated call to manned call center phone number. Value will be the phone number for the Account holder to call   * CARDHOLDER_TO_VISIT_WEBSITE &#x3D;  Account holder to visit a website. Value will be the website URL   * CARDHOLDER_TO_USE_MOBILE_APP &#x3D; Account holder to use a specific mobile app to activate token. Value will be replaced by a formatted string   * ISSUER_TO_CALL_CARDHOLDER_NUMBER &#x3D; Issuer-initiated voice call to Account holder&#39;s phone. Value will be the Account holder&#39;s masked voice call phone number.  
        /// </summary>
        /// <value>Specifies the activation method type.   Must be one of    * TEXT_TO_CARDHOLDER_NUMBER &#x3D; Text message to Account holder&#39;s mobile phone number. Value will be the Account holder&#39;s masked mobile phone number   * EMAIL_TO_CARDHOLDER_ADDRESS &#x3D; Email to Account holder&#39;s email address. Value will be the Account holder&#39;s masked email address   * CARDHOLDER_TO_CALL_AUTOMATED_NUMBER &#x3D; Account holder-initiated call to automated call center phone number. Value will be the phone number for the Account holder to call    * CARDHOLDER_TO_CALL_MANNED_NUMBER &#x3D; Account holder-initiated call to manned call center phone number. Value will be the phone number for the Account holder to call   * CARDHOLDER_TO_VISIT_WEBSITE &#x3D;  Account holder to visit a website. Value will be the website URL   * CARDHOLDER_TO_USE_MOBILE_APP &#x3D; Account holder to use a specific mobile app to activate token. Value will be replaced by a formatted string   * ISSUER_TO_CALL_CARDHOLDER_NUMBER &#x3D; Issuer-initiated voice call to Account holder&#39;s phone. Value will be the Account holder&#39;s masked voice call phone number.  </value>
        /// <example>CARDHOLDER_TO_CALL_AUTOMATED_NUMBER</example>
        [DataMember(Name = "type", IsRequired = true, EmitDefaultValue = true)]
        public string type { get; set; }

        /// <summary>
        /// Specifies the activation method value (meaning varies depending on the activation method type).
        /// </summary>
        /// <value>Specifies the activation method value (meaning varies depending on the activation method type).</value>
        /// <example>1-800-BANK-NUMBER</example>
        [DataMember(Name = "value", IsRequired = true, EmitDefaultValue = true)]
        public string value { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class ActivationMethod {\n");
            sb.Append("  type: ").Append(type).Append("\n");
            sb.Append("  value: ").Append(value).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // type (string) maxLength
            if (this.type != null && this.type.Length > 64)
            {
                yield return new ValidationResult("Invalid value for type, length must be less than 64.", new [] { "type" });
            }

            // type (string) minLength
            if (this.type != null && this.type.Length < 1)
            {
                yield return new ValidationResult("Invalid value for type, length must be greater than 1.", new [] { "type" });
            }

            // value (string) maxLength
            if (this.value != null && this.value.Length > 64)
            {
                yield return new ValidationResult("Invalid value for value, length must be less than 64.", new [] { "value" });
            }

            // value (string) minLength
            if (this.value != null && this.value.Length < 1)
            {
                yield return new ValidationResult("Invalid value for value, length must be greater than 1.", new [] { "value" });
            }

            yield break;
        }
    }

}
