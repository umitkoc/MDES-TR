/*
 * Token Connect API
 *
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed. All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded. All request and response parameters are case sensitive. 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing PushMultipleAccountsRequestData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class PushMultipleAccountsRequestDataTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for PushMultipleAccountsRequestData
        //private PushMultipleAccountsRequestData instance;

        public PushMultipleAccountsRequestDataTests()
        {
            // TODO uncomment below to create an instance of PushMultipleAccountsRequestData
            //instance = new PushMultipleAccountsRequestData();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of PushMultipleAccountsRequestData
        /// </summary>
        [Fact]
        public void PushMultipleAccountsRequestDataInstanceTest()
        {
            // TODO uncomment below to test "IsType" PushMultipleAccountsRequestData
            //Assert.IsType<PushMultipleAccountsRequestData>(instance);
        }

        /// <summary>
        /// Test the property 'requestId'
        /// </summary>
        [Fact]
        public void requestIdTest()
        {
            // TODO unit test for the property 'requestId'
        }

        /// <summary>
        /// Test the property 'pushFundingAccounts'
        /// </summary>
        [Fact]
        public void pushFundingAccountsTest()
        {
            // TODO unit test for the property 'pushFundingAccounts'
        }

        /// <summary>
        /// Test the property 'tokenRequestorId'
        /// </summary>
        [Fact]
        public void tokenRequestorIdTest()
        {
            // TODO unit test for the property 'tokenRequestorId'
        }

        /// <summary>
        /// Test the property 'signatureData'
        /// </summary>
        [Fact]
        public void signatureDataTest()
        {
            // TODO unit test for the property 'signatureData'
        }

        /// <summary>
        /// Test the property 'requestIssuerInitiatedDigitizationData'
        /// </summary>
        [Fact]
        public void requestIssuerInitiatedDigitizationDataTest()
        {
            // TODO unit test for the property 'requestIssuerInitiatedDigitizationData'
        }

        /// <summary>
        /// Test the property 'pushAccountReceiptsValidityPeriod'
        /// </summary>
        [Fact]
        public void pushAccountReceiptsValidityPeriodTest()
        {
            // TODO unit test for the property 'pushAccountReceiptsValidityPeriod'
        }
    }
}
