/*
 * Token Connect API
 *
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed. All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded. All request and response parameters are case sensitive. 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing EncryptedPayloadForMultiplePushData
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EncryptedPayloadForMultiplePushDataTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EncryptedPayloadForMultiplePushData
        //private EncryptedPayloadForMultiplePushData instance;

        public EncryptedPayloadForMultiplePushDataTests()
        {
            // TODO uncomment below to create an instance of EncryptedPayloadForMultiplePushData
            //instance = new EncryptedPayloadForMultiplePushData();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EncryptedPayloadForMultiplePushData
        /// </summary>
        [Fact]
        public void EncryptedPayloadForMultiplePushDataInstanceTest()
        {
            // TODO uncomment below to test "IsType" EncryptedPayloadForMultiplePushData
            //Assert.IsType<EncryptedPayloadForMultiplePushData>(instance);
        }

        /// <summary>
        /// Test the property 'encryptedData'
        /// </summary>
        [Fact]
        public void encryptedDataTest()
        {
            // TODO unit test for the property 'encryptedData'
        }

        /// <summary>
        /// Test the property 'publicKeyFingerprint'
        /// </summary>
        [Fact]
        public void publicKeyFingerprintTest()
        {
            // TODO unit test for the property 'publicKeyFingerprint'
        }

        /// <summary>
        /// Test the property 'encryptedKey'
        /// </summary>
        [Fact]
        public void encryptedKeyTest()
        {
            // TODO unit test for the property 'encryptedKey'
        }

        /// <summary>
        /// Test the property 'oaepHashingAlgorithm'
        /// </summary>
        [Fact]
        public void oaepHashingAlgorithmTest()
        {
            // TODO unit test for the property 'oaepHashingAlgorithm'
        }

        /// <summary>
        /// Test the property 'iv'
        /// </summary>
        [Fact]
        public void ivTest()
        {
            // TODO unit test for the property 'iv'
        }
    }
}
