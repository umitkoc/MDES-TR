/*
 * Token Connect API
 *
 * The MDES APIs are designed as RPC style stateless web services where each API endpoint represents an operation to be performed. All request and response payloads are sent in the JSON (JavaScript Object Notation) data-interchange format. Each endpoint in the API specifies the HTTP Method used to access it. All strings in request and response objects are to be UTF-8 encoded. All request and response parameters are case sensitive. 
 *
 * The version of the OpenAPI document: 2.0.8
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing AccountHolder
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class AccountHolderTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for AccountHolder
        //private AccountHolder instance;

        public AccountHolderTests()
        {
            // TODO uncomment below to create an instance of AccountHolder
            //instance = new AccountHolder();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of AccountHolder
        /// </summary>
        [Fact]
        public void AccountHolderInstanceTest()
        {
            // TODO uncomment below to test "IsType" AccountHolder
            //Assert.IsType<AccountHolder>(instance);
        }

        /// <summary>
        /// Test the property 'accountHolderName'
        /// </summary>
        [Fact]
        public void accountHolderNameTest()
        {
            // TODO unit test for the property 'accountHolderName'
        }

        /// <summary>
        /// Test the property 'accountHolderAddress'
        /// </summary>
        [Fact]
        public void accountHolderAddressTest()
        {
            // TODO unit test for the property 'accountHolderAddress'
        }

        /// <summary>
        /// Test the property 'accountHolderEmailAddress'
        /// </summary>
        [Fact]
        public void accountHolderEmailAddressTest()
        {
            // TODO unit test for the property 'accountHolderEmailAddress'
        }

        /// <summary>
        /// Test the property 'accountHolderMobilePhoneNumber'
        /// </summary>
        [Fact]
        public void accountHolderMobilePhoneNumberTest()
        {
            // TODO unit test for the property 'accountHolderMobilePhoneNumber'
        }
    }
}
