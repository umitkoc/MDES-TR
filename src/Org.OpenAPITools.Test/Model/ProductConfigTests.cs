/*
 * Mastercard Digital Enablement API
 *
 * The Mastercard Digital Enablement API encompasses a set of APIs that are initiated by the Token Requestor for the purposes of creating and managing the life cycle of a token.      **Authentication**  <br><br>  Mastercard uses OAuth 1.0a with body hash extension for authenticating the API clients. This requires every request that you send to  Mastercard to be signed with an RSA private key. A private-public RSA key pair must be generated consisting of:  <br><br>  1. A private key for the OAuth signature for API requests. It is recommended to keep the private key in a password-protected or hardware keystore.  <br>  2. A public key is shared with Mastercard during the project setup process through either a certificate signing request (CSR) or the API Key Generator. Mastercard will use the public key to verify the OAuth signature that is provided on every API call.<br>   An OAUTH1.0a signer library is available on [GitHub](https://github.com/Mastercard/oauth1-signer-java)  <br><br>  **Encryption**  <br><br>  All communications between Issuer web service and the Mastercard gateway is encrypted using TLS.  <br><br>  **Additional Encryption of Sensitive Data**  <br><br>  In addition to the OAuth authentication, when using MDES Digital Enablement Service, any PCI sensitive and all account holder Personally Identifiable Information (PII) data must be encrypted. This requirement applies to the API fields containing encryptedData. Sensitive data is encrypted using a symmetric session (one-time-use) key. The symmetric session key is then wrapped with an RSA Public Key supplied by Mastercard during API setup phase (the Customer Encryption Key). <br>   Java Client Encryption Library available on [GitHub](https://github.com/Mastercard/client-encryption-java) 
 *
 * The version of the OpenAPI document: 1.3.3
 * Contact: apisupport@mastercard.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing ProductConfig
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ProductConfigTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ProductConfig
        //private ProductConfig instance;

        public ProductConfigTests()
        {
            // TODO uncomment below to create an instance of ProductConfig
            //instance = new ProductConfig();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProductConfig
        /// </summary>
        [Fact]
        public void ProductConfigInstanceTest()
        {
            // TODO uncomment below to test "IsType" ProductConfig
            //Assert.IsType<ProductConfig>(instance);
        }

        /// <summary>
        /// Test the property 'BrandLogoAssetId'
        /// </summary>
        [Fact]
        public void BrandLogoAssetIdTest()
        {
            // TODO unit test for the property 'BrandLogoAssetId'
        }

        /// <summary>
        /// Test the property 'IssuerLogoAssetId'
        /// </summary>
        [Fact]
        public void IssuerLogoAssetIdTest()
        {
            // TODO unit test for the property 'IssuerLogoAssetId'
        }

        /// <summary>
        /// Test the property 'IsCoBranded'
        /// </summary>
        [Fact]
        public void IsCoBrandedTest()
        {
            // TODO unit test for the property 'IsCoBranded'
        }

        /// <summary>
        /// Test the property 'CoBrandName'
        /// </summary>
        [Fact]
        public void CoBrandNameTest()
        {
            // TODO unit test for the property 'CoBrandName'
        }

        /// <summary>
        /// Test the property 'CoBrandLogoAssetId'
        /// </summary>
        [Fact]
        public void CoBrandLogoAssetIdTest()
        {
            // TODO unit test for the property 'CoBrandLogoAssetId'
        }

        /// <summary>
        /// Test the property 'CardBackgroundCombinedAssetId'
        /// </summary>
        [Fact]
        public void CardBackgroundCombinedAssetIdTest()
        {
            // TODO unit test for the property 'CardBackgroundCombinedAssetId'
        }

        /// <summary>
        /// Test the property 'CardBackgroundAssetId'
        /// </summary>
        [Fact]
        public void CardBackgroundAssetIdTest()
        {
            // TODO unit test for the property 'CardBackgroundAssetId'
        }

        /// <summary>
        /// Test the property 'IconAssetId'
        /// </summary>
        [Fact]
        public void IconAssetIdTest()
        {
            // TODO unit test for the property 'IconAssetId'
        }

        /// <summary>
        /// Test the property 'ForegroundColor'
        /// </summary>
        [Fact]
        public void ForegroundColorTest()
        {
            // TODO unit test for the property 'ForegroundColor'
        }

        /// <summary>
        /// Test the property 'IssuerName'
        /// </summary>
        [Fact]
        public void IssuerNameTest()
        {
            // TODO unit test for the property 'IssuerName'
        }

        /// <summary>
        /// Test the property 'ShortDescription'
        /// </summary>
        [Fact]
        public void ShortDescriptionTest()
        {
            // TODO unit test for the property 'ShortDescription'
        }

        /// <summary>
        /// Test the property 'LongDescription'
        /// </summary>
        [Fact]
        public void LongDescriptionTest()
        {
            // TODO unit test for the property 'LongDescription'
        }

        /// <summary>
        /// Test the property 'CustomerServiceUrl'
        /// </summary>
        [Fact]
        public void CustomerServiceUrlTest()
        {
            // TODO unit test for the property 'CustomerServiceUrl'
        }

        /// <summary>
        /// Test the property 'CustomerServiceEmail'
        /// </summary>
        [Fact]
        public void CustomerServiceEmailTest()
        {
            // TODO unit test for the property 'CustomerServiceEmail'
        }

        /// <summary>
        /// Test the property 'CustomerServicePhoneNumber'
        /// </summary>
        [Fact]
        public void CustomerServicePhoneNumberTest()
        {
            // TODO unit test for the property 'CustomerServicePhoneNumber'
        }

        /// <summary>
        /// Test the property 'IssuerMobileApp'
        /// </summary>
        [Fact]
        public void IssuerMobileAppTest()
        {
            // TODO unit test for the property 'IssuerMobileApp'
        }

        /// <summary>
        /// Test the property 'OnlineBankingLoginUrl'
        /// </summary>
        [Fact]
        public void OnlineBankingLoginUrlTest()
        {
            // TODO unit test for the property 'OnlineBankingLoginUrl'
        }

        /// <summary>
        /// Test the property 'TermsAndConditionsUrl'
        /// </summary>
        [Fact]
        public void TermsAndConditionsUrlTest()
        {
            // TODO unit test for the property 'TermsAndConditionsUrl'
        }

        /// <summary>
        /// Test the property 'PrivacyPolicyUrl'
        /// </summary>
        [Fact]
        public void PrivacyPolicyUrlTest()
        {
            // TODO unit test for the property 'PrivacyPolicyUrl'
        }

        /// <summary>
        /// Test the property 'IssuerProductConfigCode'
        /// </summary>
        [Fact]
        public void IssuerProductConfigCodeTest()
        {
            // TODO unit test for the property 'IssuerProductConfigCode'
        }
    }
}
