openapi: 3.0.0
info:
  version: 1.3.3
  title: Mastercard Digital Enablement API
  description: |
   The Mastercard Digital Enablement API encompasses a set of APIs that are initiated by the Token Requestor for the purposes of creating and managing the life cycle of a token.     
   **Authentication**
    <br><br>
    Mastercard uses OAuth 1.0a with body hash extension for authenticating the API clients. This requires every request that you send to  Mastercard to be signed with an RSA private key. A private-public RSA key pair must be generated consisting of:
    <br><br>
    1. A private key for the OAuth signature for API requests. It is recommended to keep the private key in a password-protected or hardware keystore.
    <br>
    2. A public key is shared with Mastercard during the project setup process through either a certificate signing request (CSR) or the API Key Generator. Mastercard will use the public key to verify the OAuth signature that is provided on every API call.<br>

    An OAUTH1.0a signer library is available on [GitHub](https://github.com/Mastercard/oauth1-signer-java)
    <br><br>
    **Encryption**
    <br><br>
    All communications between Issuer web service and the Mastercard gateway is encrypted using TLS.
    <br><br>
    **Additional Encryption of Sensitive Data**
    <br><br>
    In addition to the OAuth authentication, when using MDES Digital Enablement Service, any PCI sensitive and all account holder Personally Identifiable Information (PII) data must be encrypted. This requirement applies to the API fields containing encryptedData. Sensitive data is encrypted using a symmetric session (one-time-use) key. The symmetric session key is then wrapped with an RSA Public Key supplied by Mastercard during API setup phase (the Customer Encryption Key). <br>

    Java Client Encryption Library available on [GitHub](https://github.com/Mastercard/client-encryption-java)

  contact:
    name: API Support
    url: https://developer.mastercard.com/support
    email: apisupport@mastercard.com
tags:
  - name: Tokenize
    description: Used to digitize a card to create a server-based Token.
  - name: Transact
    description: Used by Token Requestor to create a Digital Secure Remote Payment ("DSRP") transaction cryptogram
  - name: Notify Token Updated
    description: Used to notify the Token Requestor of significant Token updates
  - name: Get Asset
    description: Used to retrieve static Assets from the MDES repository.
  - name: Suspend
    description: Used to temporarily suspend one or more Tokens.
  - name: Unsuspend
    description: Used to unsuspend one or more previously suspended Tokens. 
  - name: Delete
    description: Used to delete one or more Tokens.
  - name: Get Task Status
    description: Used to check the status of any asynchronous task that was previously requested.
  - name: Search Tokens
    description: Used to get basic token information for all tokens.
  - name: Get Token
    description: Used to get the status and details of a single given Token.
  
  
paths:
  /digitization/static/1/0/tokenize:
    post:
      x-mastercard-api-encrypted: true
      tags:
        - Tokenize
      description: >
        Used to digitize a card to create a server-based Token. MDES will
        perform both card availability and eligibility checks to check that this
        specific card is eligible for digitization. As both availability and
        eligibility are combined, only a Tokenization Authorization message is
        sent to the issuer as part of this request to authorize the
        digitization. No Tokenization Eligibility message is sent. The
        digitization decision will be one of Approved or Declined.
      summary: Used to digitize a card to create a server-based Token.
      operationId: createTokenize
      requestBody:
        $ref: "#/components/requestBodies/TokenizeRequest"
      responses:
        "200":
          $ref: "#/components/responses/TokenizeResponse"
        default:
          $ref: '#/components/responses/Errors'
  /remotetransaction/static/1/0/transact:
    post:
      x-mastercard-api-encrypted: true
      tags:
        - Transact
      operationId: createTransact
      summary: Used by the Token Requestor to create a Digital Secure Remote Payment
        ("DSRP") transaction cryptogram using the credentials stored within MDES
        in order to perform a DSRP transaction.
      description: >
        This API is used by the Token Requestor to create a Digital Secure
        Remote Payment ("DSRP") transaction cryptogram using the credentials
        stored within MDES in order to perform a DSRP transaction through a
        payment processor.  The entire response is encrypted. The caller may
        only transact using the Tokens belonging to them.
      requestBody:
        $ref: "#/components/requestBodies/TransactRequest"
      responses:
        "200":
          $ref: "#/components/responses/TransactResponse"
        default:
          $ref: '#/components/responses/TransactErrors'
  /digitization/static/1/0/notifyTokenUpdated:
    post:
      x-mastercard-api-encrypted: true
      tags:
        - Notify Token Updated
      operationId: notifyTokenUpdate (for token state change)
      summary: Outbound API used by MDES to notify the Token Requestor of significant
        Token updates, such as when the Token is activated, suspended,
        unsuspended or deleted; or when information about the Token or its
        product configuration has changed.
      description: >
        This API is used by MDES to notify the Token Requestor of significant Token updates. 
      requestBody:
        $ref: "#/components/requestBodies/NotifyTokenUpdatedRequest"
      responses:
        "200":
          $ref: "#/components/responses/NotifyTokenUpdatedResponse"
  "/assets/static/1/0/asset/{AssetId}":
    get:
      parameters:
        - $ref: "#/components/parameters/parameterAsset"
      tags:
        - Get Asset
      summary: Used to retrieve static Assets from the MDES repository.
      description: >
        This API is used to retrieve static Assets from MDES?s repository, such
        as - Card art, MasterCard brand logos, Issuers? logos, and Terms and
        Conditions. Every Asset in the repository is referenced using an Asset
        ID. Once an Asset has been assigned to an Asset ID, the contents of the
        Asset will not change. If contents do need to change (for example,
        Issuer has supplied new artwork for a product), they will be updated in
        the repository and be assigned a new Asset ID.  Different types of
        Assets are supported in the repository, such as images and text files;
        and for each type of Asset, multiple formats may be supported. For
        example, a single image Asset may be supported in various file formats;
        or variant sizes, allowing the Token Requestor to select the most
        appropriate format to use for a particular target device.
      operationId: getAsset
      responses:
        "200":
          $ref: "#/components/responses/AssetResponse" 
        default:
          $ref: '#/components/responses/Errors'  
  /digitization/static/1/0/suspend:
    post:
      
      tags:
        - Suspend
      summary: Used to temporarily suspend one or more Tokens.
      description: >
        This API is used to temporarily suspend one or more Tokens (for example,
        suspending all Tokens on a device in response to the device being
        lost).  The API is limited to 10 Tokens per request. MDES will
        coordinate the suspension of the Tokens and notify any relevant parties
        that the Tokens have been suspended. A suspended Token can be
        unsuspended using the Unsuspend resource.
      operationId: createSuspend
      requestBody:
        $ref: "#/components/requestBodies/SuspendRequest"
      responses:
        "200":
          $ref: "#/components/responses/SuspendResponse"
        default:
          $ref: '#/components/responses/Errors'
  /digitization/static/1/0/unsuspend:
    post:
      tags:
        - Unsuspend
      summary: Used to unsuspend one or more previously suspended Tokens. The API is
        limited to 10 Tokens per request.
      description: >
        This API is used to unsuspend one or more previously suspended Tokens.
        The API is limited to 10 Tokens per request. MDES will coordinate the
        unsuspension of the Tokens and notify any relevant parties that the
        Tokens have now been unsuspended.
      operationId: createUnsuspend
      requestBody:
        $ref: "#/components/requestBodies/UnSuspendRequest"
      responses:
        "200":
          $ref: "#/components/responses/UnSuspendResponse"
        default:
          $ref: '#/components/responses/Errors'
  /digitization/static/1/0/delete:
    post:
      tags:
        - Delete
      summary: Used to delete one or more Tokens. The API is limited to 10 Tokens per
        request.
      description: >
        This API is used to delete one or more Tokens.  The API is limited to 10
        Tokens per request. MDES will coordinate the deactivation of the Tokens
        and notify any relevant parties that the Tokens have now been
        deactivated.
      operationId: deleteDigitization
      requestBody:
        $ref: "#/components/requestBodies/DeleteRequest"
      responses:
        "200":
          $ref: "#/components/responses/DeleteResponse"
        default:
          $ref: '#/components/responses/Errors'
  /digitization/static/1/0/getTaskStatus:
    post:
      tags:
        - Get Task Status
      summary: Used to check the status of any asynchronous task that was previously
        requested.
      description: >
        Used to check the status of any asynchronous task that was previously
        requested.
      operationId: getTaskStatus
      requestBody:
        $ref: "#/components/requestBodies/GetTaskStatusRequest"
      responses:
        "200":
          $ref: "#/components/responses/GetTaskStatusResponse"
        default:
          $ref: '#/components/responses/Errors'
  /digitization/static/1/0/searchTokens:
    post:
      tags:
        - Search Tokens
      summary: Used to get basic token information for all tokens on a specified
        device, or all tokens mapped to the given Account PAN.
      description: >
        This API is used to get basic token information for all tokens on a
        specified device, or all tokens mapped to the given Account PAN. It may
        be used to check current Token(s) state or, in exception scenarios (such
        as network time out), to ensure that external systems remain in sync
        with the Token state as maintained by MDES. Deactivated tokens are not
        returned.
      operationId: SearchTokens
      requestBody:
        $ref: "#/components/requestBodies/SearchTokensRequest"
      responses:
        "200":
          $ref: "#/components/responses/SearchTokensResponse"
        default:
          $ref: '#/components/responses/Errors'
  /digitization/static/1/0/getToken:
    post:
      tags:
        - Get Token
      operationId: getToken
      summary: Used to get the status and details of a single given Token.
      description: >
        This API is used to get the status and details of a single given Token.
        It may be used to check current Token state or in exception scenarios
        (such as network time out) to ensure that external systems remain in
        sync with the Token state as maintained by MDES. Optionally, if
        requested, the token number can also be provided in the response (in
        encrypted form).
      requestBody:
        $ref: "#/components/requestBodies/GetTokenRequest"
       
      responses:
        "200":
          $ref: "#/components/responses/GetTokenResponse"
        default:
          $ref: '#/components/responses/Errors'
components:
  parameters:
    parameterAsset:
      in: path
      name: AssetId
      required: true
      schema: 
        type: string
      description: >
          An Asset ID corresponds to an individual Digital Asset. Digital Assets are returned as part of the Product Configuration from the Tokenize Response. The Asset ID itself is supplied as a Get request in the form of https://{INSERT ENVIRONMENT URL HERE}/mdes/assets/static/1/0/asset/{AssetId} - See JSON examples for details.
      example: 554dbc44-496a-4896-b41c-dd431e25d5e4
    
  requestBodies:
    TokenizeRequest:
      required: true
      description: Tokenize Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Tokenize"       
    TransactRequest: 
      required: true
      description: Transact Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Transact"
    NotifyTokenUpdatedRequest:
      required: true
      description: Notify Token Updated request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotifyTokenUpdated"
    SuspendRequest: 
      required: true
      description: Suspend Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Suspend"
    UnSuspendRequest: 
      required: true
      description: UnSuspend Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UnSuspend"        
    DeleteRequest: 
      required: true
      description: Delete Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Delete"
    GetTaskStatusRequest: 
      required: true
      description: Get Task Status Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetTaskStatus"
    SearchTokensRequest: 
      required: true
      description: Search Tokens Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SearchTokens"
    GetTokenRequest: 
      required: true
      description: GetToken Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GetToken"
  responses:
    TokenizeResponse: 
      description: Tokenize Response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TokenizeResults"
    TransactResponse:
      description: Create a DSRP transaction cryptogram
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactResults"
    NotifyTokenUpdatedResponse:
      description: Notify Token Updated response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotifyTokenUpdatedResults"
    AssetResponse:
      description: Retrieve static Assets from MDES repository
      content: 
        application/json:
          schema:
            $ref: "#/components/schemas/AssetResults"
    SuspendResponse:
      description: Temporarily suspend one or more Tokens
      content:
         application/json:
           schema:
             $ref: "#/components/schemas/SuspendResults"
    UnSuspendResponse:
      description: Unsuspend one or more previously suspended Tokens
      content:
         application/json:
           schema:
             $ref: "#/components/schemas/UnSuspendResults"
    DeleteResponse:
      description: Delete one or more Tokens
      content:
         application/json:
           schema:
             $ref: "#/components/schemas/DeleteResults"
    GetTaskStatusResponse:
      description: Check the status of any asynchronous task 
      content:
         application/json:
           schema:
             $ref: "#/components/schemas/GetTaskStatusResults"
    SearchTokensResponse:
      description: Get basic token information for all tokens 
      content:
         application/json:
           schema:
             $ref: "#/components/schemas/SearchTokensResults"
    GetTokenResponse:
      description: Get the status and details of a single given Token
      content:
         application/json:
           schema:
             $ref: "#/components/schemas/GetTokenResults" 
    TransactErrors:
      description: Unexpected error in the Transact API
      content:
         application/json:
           schema:
             $ref: "#/components/schemas/TransactError"
    Errors:
      description: Unexpected error
      content:
         application/json:
           schema:
             $ref: "#/components/schemas/ErrorsResponse" 
  schemas:
    Tokenize:
      required:
        - tokenRequestorId
        - tokenType
        - taskId
        - fundingAccountInfo
        - requestId
      properties:
        responseHost:
          type: string
          description: >
            "The host that originated the request. Future calls in the same
            conversation may be routed to this host. Must be provided as:
            host[:port][/contextRoot] Where port and contextRoot are optional.
            If contextRoot is not provided, the default (per the URL Scheme) is
            assumed and must be used."
          minLength: 11
          maxLength: 64
          example: site1.your-server.com
        requestId:
          type: string
          description: |
            Unique identifier for the request.
          minLength: 1
          maxLength: 64
          example: "123456"
        tokenType:
          type: string
          description: |
            The type of Token requested. Must be CLOUD
          minLength: 5
          maxLength: 32
          example: CLOUD
        tokenRequestorId:
          type: string
          description: >
            11-digit numeric ID provided by Mastercard that identifies the Token
            Requestor.
          minLength: 11
          maxLength: 11
          example: "98765432101"
        taskId:
          type: string
          description: >
            Identifier for this task as assigned by the Token Requestor, unique
            across a given Token Requestor Identifier. May be used in the Get
            Task Status API to query the status of this task.
          minLength: 1
          maxLength: 64
          example: "123456"
        fundingAccountInfo:
          $ref: "#/components/schemas/fundingAccountInfo"
        consumerLanguage:
          type: string
          description: >
            Language preference selected by the consumer. Formatted as an ISO-
            639-1 two-letter language code.
          minLength: 2
          maxLength: 2
          example: en
        tokenizationAuthenticationValue:
          type: string
          description: >
            The Tokenization Authentication Value (TAV) as cryptographically
            signed by the Issuer to authorize this digitization request.
          minLength: 1
          maxLength: 2048
          example: RHVtbXkgYmFzZSA2NCBkYXRhIC0gdGhpcyBpcyBub3QgYSByZWFsIFRBViBleGFtcGxl
        decisioningData:
          $ref: "#/components/schemas/DecisioningData"
    TokenizeResults:
      properties:
        responseHost:
          type: string
          description: >
            The MasterCard host that originated the request. Future calls in the
            same conversation may be routed to this host.
          minLength: 6
          maxLength: 64
          example: site2.payment-app-provider.com
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          minLength: 1
          maxLength: 64
          example: 123456
        decision:
          type: string
          description: >
            The tokenization decision for this digitization request. Must be
            either APPROVED (Digitization request was approved), DECLINED
            (Digitization request was declined) OR
            REQUIRE_ADDITIONAL_AUTHENTICATION Digitization request was approved
            but optionally requires additional authentication. One or more
            Authentication methods may be provided).
          minLength: 8
          maxLength: 64
          example: APPROVED
        authenticationMethods:
          type: array
          items:
            $ref: "#/components/schemas/authenticationMethods"
        tokenUniqueReference:
          type: string
          description: >
            The unique reference allocated to the new Token. Serves as a unique
            identifier for all subsequent queries or management functions
            relating to this Token. Provided if the decision was APPROVED or
            REQUIRE_ADDITIONAL_AUTHENTICATION.
          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        panUniqueReference:
          type: string
          description: >
            The unique reference allocated to the Account Primary Account
            Number. Provided if the decision was APPROVED or
            REQUIRE_ADDITIONAL_AUTHENTICATION.
          minLength: 1
          maxLength: 64
          example: FWSPMC000000000159f71f703d2141efaf04dd26803f922b
        productConfig:
          $ref: "#/components/schemas/productConfig"
        tokenInfo:
          $ref: "#/components/schemas/tokenInfo"
        tokenDetail:
          $ref: "#/components/schemas/tokenDetail"
        supportsAuthentication:
          type: boolean
          description: >
            (required)Flag to indicate if the issuer supports authentication of the cardholder on the token. Must be one of:
              - TRUE
              - FALSE
          maxLength: 5
          example: true
    Transact:
      required:
        - requestId
        - tokenUniqueReference
        - dsrpType
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        requestId:
          type: string
          description: |
            Unique identifier for the request.
          minLength: 1
          maxLength: 64
          example: "123456"
        tokenUniqueReference:
          type: string
          description: |
            Globally unique identifier for the Token, as assigned by MDES.
          minLength: 1
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        dsrpType:
          type: string
          description: >
            What type of DSRP cryptogram to create. Must be UCAF.
          minLength: 1
          maxLength: 64
          example: UCAF
        unpredictableNumber:
          type: string
          description: >
            HEX Encoded data (case sensitive) provided by the merchant to
            provide variability and uniqueness to the generation of a
            cryptogram.
          maxLength: 8
          minLength: 8
          example: "23424563"
    TransactResults:
      properties:
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          minLength: 1
          maxLength: 64
          example: "123456"
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        encryptedPayload:
          $ref: "#/components/schemas/encryptedPayloadTransact"
    encryptedPayloadTransact:
      properties:
        publicKeyFingerprint:
          type: string
          description: >
            The fingerprint of the public key used to encrypt the ephemeral AES
            key.

          minLength: 32
          maxLength: 64
          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b
        encryptedKey:
          type: string
          description: >
            One-time use AES key encrypted by the MasterCard public key (as
            identified by publicKeyFingerprint) using the OAEP or PKCS#1 v1.5
            scheme (depending on the value of oaepHashingAlgorithm.

          minLength: 32
          maxLength: 512
          example: A1B2C3D4E5F6112233445566778899111
        oaepHashingAlgorithm:
          type: string
          description: >
            Hashing algorithm used with the OAEP scheme. Must be either SHA256
            or SHA512.
          minLength: 6
          maxLength: 6
          example: SHA512
        iv:
          type: string
          description: >
            The initialization vector used when encrypting data using the
            one-time use AES key. Must be exactly 16 bytes (32 character hex
            string) to match the block size. If not present, an IV of zero is
            assumed.
          maxLength: 32
          minLength: 32
          example: 1b9396c98ab2bfd195de661d70905a45
        encryptedData:
          $ref: "#/components/schemas/transactEncryptedData"
    transactEncryptedData:
      properties:
        accountNumber:
          type: string
          description: >
            The Primary Account Number for the transaction. This is the Token
            PAN.
          minLength: 9
          maxLength: 19
          example: 5480981500100002
        applicationExpiryDate:
          type: string
          description: |
            Application expiry date for the Token. Expressed in YYMMDD format.
          maxLength: 6
          minLength: 6
          example: "210931"
        panSequenceNumber:
          type: string
          description: |
            Application PAN sequence number for the Token
          maxLength: 2
          minLength: 2
          example: "01"
        track2Equivalent:
          type: string
          description: >
            Track 2 equivalent data for the Token. Expressed according to
            ISO/IEC 7813, excluding start sentinel, end sentinel, and
            Longitudinal Redundancy Check (LRC), using hex nibble 'D' as field
            separator, and padded to whole bytes using one hex nibble 'F' as
            needed.
          minLength: 32
          maxLength: 38
          example: 5480981500100002D18112011000000000000F
        de48se43Data:
          type: string
          description: |
            Data for DE 48 Subelement 43 containing the cryptogram.
            DSRP cryptogram must be sent in DE104. Please refer to AN 3363 for details.
          minLength: 1
          maxLength: 32
          example: "11223344556677889900112233445566"
    NotifyTokenUpdated:
      required:
        - responseHost
        - requestId
        - encryptedPayload
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation should be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        requestId:
          type: string
          description: |
            Unique identifier for the request.
          minLength: 1
          maxLength: 64
          example: "123456"
        encryptedPayload:
          $ref: "#/components/schemas/encryptedPayload"
        redigitizationRequired:
          type: boolean
          description: >
            Flag to indicate that the tokens need to be re-digitized because they are about to expire. This
            applies to all tokens in the Tokens array. **NOT APPLICABLE FOR SERVER BASED TOKENS**
          minLength: 4
          maxLength: 5
          example: false
    encryptedPayload:
      required:
        - publicKeyFingerprint
        - encryptedKey
        - encryptedData
      properties:
        publicKeyFingerprint:
          type: string
          description: >
            The fingerprint of the public key used to encrypt the ephemeral AES
            key.
          minLength: 32
          maxLength: 64
          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b
        encryptedKey:
          type: string
          description: >
            One-time use AES key encrypted by the MasterCard public key (as
            identified by publicKeyFingerprint) using the OAEP or PKCS#1 v1.5
            scheme (depending on the value of oaepHashingAlgorithm.
          minLength: 32
          maxLength: 512
          example: A1B2C3D4E5F6112233445566778899111
        oaepHashingAlgorithm:
          type: string
          description: >
            Hashing algorithm used with the OAEP scheme. Must be either SHA256
            or SHA512.
          minLength: 6
          maxLength: 6
          example: SHA512
        iv:
          type: string
          description: >
            The initialization vector used when encrypting data using the
            one-time use AES key. Must be exactly 16 bytes (32 character hex
            string) to match the block size. If not present, an IV of zero is
            assumed. Length - 32.
          minLength: 32
          maxLength: 32
          example: "31323334353637383930313233343536"
        encryptedData:
          $ref: "#/components/schemas/notifyTokenEncryptedPayload"
    notifyTokenEncryptedPayload:
      properties:
        tokens:
          type: array
          description: State of each Token following this operation.
          items:
            $ref: "#/components/schemas/token_for_NTU"
    NotifyTokenUpdatedResults:
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site1.mastercard.com
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          minLength: 1
          maxLength: 64
          example: "123456"
    token_for_NTU:
      properties:
        tokenUniqueReference:
          type: string
          description: >
            The unique reference allocated to the Token which is always present
            even if an error occurs. <br>
            maxLength: 64
          minLength: 1
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        tokenRequestorId:
          type: string
          description: >
            Identifies the Token Requestor. <br>
          minLength: 11
          maxLength: 11
          example: "98765432101"
        status:
          type: string
          description: |
            The current status of Token. Must be either:
            * 'INACTIVE' (Token has not yet been activated)
            * 'ACTIVE' (Token is active and ready to transact)
            * 'SUSPENDED' (Token is suspended and unable to transact)
            * 'DEACTIVATED' (Token has been permanently deactivated).<br>
          minLength: 1
          maxLength: 32
          example: SUSPENDED
        eventReasonCode:
          type: string
          description: |
            An optional Reason Code provided by the Issuer to explain why the token status has changed.
            Not present if the Issuer has not supplied a reason code.
            Note: Recommended that Partners be resilient to new values as new reason codes may be added in the future without notice.
            * 'DEVICE_LOST' - Cardholder confirmed token device lost.
            * 'DEVICE_STOLEN' - Cardholder confirmed token device stolen.
            * 'SUSPECTED_FRAUD' -  Issuer or cardholder reported fraudulent token transactions.
            * 'ACCOUNT_CLOSED' - Account closed.
            * 'NOT_FRAUD' - Issuer or cardholder confirmed no fraudulent token transactions.
            * 'DEVICE_FOUND' - Cardholder reported token device found or not stolen.
            * 'REDIGITIZATION_COMPLETE' - Token has been re-digitized successfully with either the expiry date extended or both expiry and token number changed.
            * 'OTHER' -  Other. <br>
          minLength: 1
          maxLength: 32
          example: SUSPECTED_FRAUD
        suspendedBy:
          type: array
          items:
            type: string
            example: CARDHOLDER
          description: |
            (CONDITIONAL only supplied if status is SUSPENDED)
            Who or what caused the Token to be suspended One or more values of:
              * ISSUER - Suspended by the Issuer.
              * TOKEN_REQUESTOR - Suspended by the Token Requestor
              * MOBILE_PIN_LOCKED - Suspended due to the Mobile PIN being locked
              * CARDHOLDER - Suspended by the Cardholder <br>
        statusTimestamp:
          type: string
          description: >
            The date and time the token status was last updated. Expressed in ISO
            8601 extended format as one of the following:
              * YYYY-MM-DDThh:mm:ss[.sss]Z
              * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm
              * Where [.sss] is optional and can be 1 to 3 digits. <br>
          minLength: 19
          maxLength: 29
          example: 2017-07-20T04:56:23.345-07:00
        productConfig:
            $ref: '#/components/schemas/productConfig'
        tokenInfo:
            $ref: '#/components/schemas/tokenInfo_for_NTU_and_getToken'
    productConfig:
      required:
        - brandLogoAssetId
        - issuerLogoAssetId
        - isCoBranded
        - iconAssetId
        - foregroundColor
        - issuerName
        - shortDescription
      properties:
        brandLogoAssetId:
          type: string
          description: >
            The MasterCard or Maestro brand logo associated with this card.
            Provided as an Asset ID ? use the Get Asset API to retrieve the
            actual asset. Always returned in Product Configuration object
          minLength: 1
          maxLength: 64
          example: 800200c9-629d-11e3-949a-0739d27e5a66
        issuerLogoAssetId:
          type: string
          description: >
            The logo of the issuing bank. Provided as an Asset ID ? use the Get
            Asset API to retrieve the actual asset. Always returned in Product
            Configuration object
          minLength: 1
          maxLength: 64
          example: dbc55444-986a-4896-b41c-5d5e2dd431e2
        isCoBranded:
          type: boolean
          description: >
            Whether the product is co-branded. Must be either true (this is a
            co-branded product) or false (this is not a co-branded product).
            Always returned in Product Configuration object
          minLength: 4
          maxLength: 5
          example: true
        coBrandName:
          type: string
          description: >
            Textual name of the co-brand partner. Required if CoBranded is true,
            not present otherwise.
            **Conditional: Conditionally required if isCoBranded = "true". Not present otherwise**
          minLength: 1
          maxLength: 128
          example: Co brand partner
        coBrandLogoAssetId:
          type: string
          description: >
            The co-brand logo (if any) for this product. Provided as an Asset ID
            ? use the Get Asset API to retrieve the actual asset.
          minLength: 1
          maxLength: 64
          example: dbc55444-496a-4896-b41c-5d5e2dd431e2
        cardBackgroundCombinedAssetId:
          type: string
          description: >
            The card image used to represent the digital card in the wallet.
            This ?combined? option contains the MasterCard, bank and any co-
            brand logos.  Provided as an Asset ID ? use the Get Asset API to
            retrieve the actual asset.
            **Conditional: either CardBackgroundCombined or CardBackground will be provided**
          minLength: 1
          maxLength: 64
          example: 739d27e5-629d-11e3-949a-0800200c9a66
        cardBackgroundAssetId:
          type: string
          description: >
            The card image used to represent the digital card in the wallet.
            This ?non-combined? option does not contain the MasterCard, bank, or
            co-brand logos. Provided as an Asset ID ? use the Get Asset API to
            retrieve the actual asset.
            **Conditional: either CardBackgroundCombined or CardBackground will be provided**
          minLength: 1
          maxLength: 64
          example: 456d27e5-629d-11e3-949a-0800200c9a66
        iconAssetId:
          type: string
          description: >
            The icon representing the primary brand(s) associated with this
            product. Provided as an Asset ID ? use the Get Asset API to retrieve
            the actual asset. Always returned in Product Configuration
            object
          minLength: 1
          maxLength: 64
          example: 739d87e5-629d-11e3-949a-0800200c9a66
        foregroundColor:
          type: string
          description: >
            Foreground color, used to overlay text on top of the card image.
            Always returned in Product Configuration object
          minLength: 3
          maxLength: 6
          format: Hexadecimal RGB color format (case-insensitive).
          example: FF5733
        issuerName:
          type: string
          description: >
            Name of the issuing bank. Always returned in Product Configuration
            object
          minLength: 1
          maxLength: 64
          example: Issuing Bank
        shortDescription:
          type: string
          description: >
            A short description for this product. Always returned in Product
            Configuration object
          minLength: 1
          maxLength: 128
          example: Bank Rewards MasterCard
        longDescription:
          type: string
          description: |
            A long description for this product.
          minLength: 1
          maxLength: 256
          example: Bank Rewards MasterCard with the super duper rewards program
        customerServiceUrl:
          type: string
          description: |
            Customer service website of the issuing bank.
          minLength: 11
          maxLength: 128
          example: https://bank.com/customerservice
        customerServiceEmail:
          type: string
          description: |
            Customer service email address of the issuing bank.
          minLength: 11
          maxLength: 64
          example: customerservice@bank.com
        customerServicePhoneNumber:
          type: string
          description: |
            Customer service phone number of the issuing bank.
          minLength: 6
          maxLength: 64
          example: 1234567891
        issuerMobileApp:
          description: >
            Contains one or more mobile app details that may be used to deep
            link from the Mobile Payment App to the issuer mobile app.
          type: object
          example: openIssuerMobileAppAndroidIntent
        onlineBankingLoginUrl:
          type: string
          description: |
            Logon URL for the issuing bank?s online banking website.
          minLength: 11
          maxLength: 128
          example: example-bank.com
        termsAndConditionsUrl:
          type: string
          description: >
            URL linking to the issuing bank?s terms and conditions for this
            product.
          minLength: 11
          maxLength: 128
          example: https://bank.com/termsAndConditions
        privacyPolicyUrl:
          type: string
          description: >
            URL linking to the issuing bank?s privacy policy for this
            product.
          minLength: 11
          maxLength: 128
          example: https://bank.com/privacy
        issuerProductConfigCode:
          type: string
          description: >
            Freeform identifier for this product configuration as assigned by
            the issuer.
          minLength: 1
          maxLength: 64
          example: 123456
    
    tokenInfo_for_NTU_and_getToken:
      required:
        - tokenPanSuffix
        - accountPanPrefix
        - tokenExpiry
        - dsrpCapable
      properties:
        tokenPanSuffix:
          type: string
          description: |
            The last few digits (typically four) of the Token PAN.
          minLength: 4
          maxLength: 8
          example: "0001"
        accountPanPrefix:
          type: string
          description: |
           The first few digits (typically six) of the Account PAN.
          minLength: 4
          maxLength: 8
          example: "500000"
        accountPanSuffix:
          type: string
          description: |
            The last few digits (typically four) of the Account PAN. Conditional - required if the token is associated to a card, not present otherwise
          minLength: 4
          maxLength: 8
          example: "0011"
        tokenExpiry:
          type: string
          description: |
            The expiry of the Token PAN, given in MMYY format.
          minLength: 4
          maxLength: 4
          example: 1018
        accountPanExpiry:
          type: string
          description: |
            The expiry of the Account PAN, given in MMYY format.
          minLength: 4
          maxLength: 4
          example: 1020
        dsrpCapable:
          type: string
          description: >
            Whether DSRP transactions are supported by this Token. Must be
            either 'true' (DSRP capable) or 'false' (Not DSRP capable).
          minLength: 4
          maxLength: 5
          example: true
        tokenAssuranceLevel:
          type: integer
          description: >
            A value indicating the confidence level of the token to Account PAN
            binding.
          maxLength: 2
          example: 3
        productCategory:
          type: string
          description: >
            The product category of the Account PAN. When supplied will be one
            of the following values:

              * CREDIT
              * DEBIT
              * PREPAID
              * UNKNOWN

          minLength: 1
          maxLength: 32
          example: CREDIT
    AssetResults:
      properties:
        mediaContents:
          type: array
          description: >
           Contains all contents of the Asset, including all variations (if any).
          items:
            $ref: "#/components/schemas/mediaContent"
    mediaContent:
      required:
        - type
        - data
      properties:
        type:
          type: string
          description: >
            What type of media this is. Specified as a MIME type, which will be
            one of the following supported types


            * applicatoin/pdf (for images must be a vector PDF image)

            * image/png (includes alpha channel)

            * text/plain

            * text/html

          minLength: 1
          maxLength: 32
          example: image/png
        data:
          type: string
          format: base64
          pattern: "^(?!\\s*$).+"
          description: >
            The data for this item of media. Base64-encoded data, given in the
            format as specified in ?type?.
          minLength: 1
          example: iVBORw0KGgoAAAANSUhEUgAAAXcAAAF3CAIAAADRopypAAAABGdBTUEAANbY1E9YMgAAAAlwSFlzAAAASAAAAEgARslrPgAAGtNJREFUeNrt3W9oW
        height:
          type: string
          description: |
            For image assets, the height of this image. Specified in pixels.
          minLength: 1
          maxLength: 6
          example: "375"
        width:
          type: string
          description: >
            For image assets, the width of this image. Specified in
            pixels.
          minLength: 1
          maxLength: 6
          example: "375"
    Suspend:
      required:
        - requestId
        - tokenUniqueReferences
        - causedBy
        - reasonCode
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        requestId:
          type: string
          description: |
            Unique identifier for the request.
          minLength: 1
          maxLength: 64
          example: 123456
        paymentAppInstanceId:
          type: string
          description: >
            Identifier for the specific Mobile Payment App instance, unique
            across a given Wallet Identifier. This value cannot be changed after
            digitization. This field is alphanumeric and additionally web-safe
            base64 characters per RFC 4648 (minus "-", underscore "_") up to a
            maximum length of 48, = should not be URL encoded. Conditional - not
            applicable for server based tokens but required otherwise.
          minLength: 1
          maxLength: 48
          example: 123456789
        tokenUniqueReferences:
          type: array
          items:
            type: string
          description: >
            The specific Token to be suspended. Array of more or more valid
            references as assigned by MDES
          minLength: 48
          maxLength: 64
          example: [DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45]
        causedBy:
          type: string
          description: >
            Who or what caused the Token to be suspended. Must be either the
            'CARDHOLDER' (operation requested by the Cardholder) or
            'TOKEN_REQUESTOR' (operation requested by the token requestor).
          minLength: 1
          maxLength: 64
          example: CARDHOLDER
        reason:
          type: string
          description: |
            Free form reason why the Tokens are being suspended.
          minLength: 1
          maxLength: 256
          example: Lost/stolen device
        reasonCode:
          type: string
          description: >
            The reason for the action to be suspended. Must be one of
            'SUSPECTED_FRAUD' (suspected fraudulent token transactions), 'OTHER'
            (Other - default used if value not provided).
          minLength: 1
          maxLength: 64
          example: SUSPECTED_FRAUD
    SuspendResults:
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site1.mastercard.com
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          minLength: 1
          maxLength: 64
          example: 123456
        tokens:
          type: array
          description: State of each Token following this operation
          items:
            $ref: "#/components/schemas/token_for_LCM"
    Delete:
      required:
        - requestId
        - tokenUniqueReferences
        - causedBy
        - reasonCode
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        requestId:
          type: string
          description: |
            Unique identifier for the request.
          minLength: 1
          maxLength: 64
          example: 123456
        paymentAppInstanceId:
          type: string
          description: >
            Identifier for the specific Mobile Payment App instance, unique
            across a given Wallet Identifier. This value cannot be changed after
            digitization. This field is alphanumeric and additionally web-safe
            base64 characters per RFC 4648 (minus "-", underscore "_") up to a
            maximum length of 48, = should not be URL encoded. Conditional - not
            applicable for server based tokens but required otherwise.
          minLength: 1
          maxLength: 48
          example: 123456789
        tokenUniqueReferences:
          type: array
          items:
            type: string
          description: >
            The specific Token to be deleted. Array of more or more valid
            references as assigned by MDES
          example: [DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45]
        causedBy:
          type: string
          description: >
            Who or what caused the Token to be deleted. Must be either the
            'CARDHOLDER' (operation requested by the Cardholder) or
            'TOKEN_REQUESTOR' (operation requested by the token requestor).
          minLength: 1
          maxLength: 64
          example: CARDHOLDER
        reason:
          type: string
          description: |
            Free form reason why the Tokens are being suspended.
          minLength: 1
          maxLength: 256
          example: Lost/stolen device
        reasonCode:
          type: string
          description: >
            The reason for the action to be deleted. Must be one of
            'SUSPECTED_FRAUD' (suspected fraudulent token transactions), 'OTHER'
            (Other - default used if value not provided).
          minLength: 1
          maxLength: 64
          example: SUSPECTED_FRAUD
    DeleteResults:
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site1.mastercard.com
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          minLength: 1
          maxLength: 64
          example: 123456
        tokens:
          type: array
          description: State of each Token following this operation
          items:
            $ref: "#/components/schemas/token_for_delete"
    UnSuspend:
      required:
        - requestId
        - tokenUniqueReferences
        - causedBy
        - reasonCode
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        requestId:
          type: string
          description: |
            Unique identifier for the request.
          minLength: 1
          maxLength: 64
          example: 123456
        paymentAppInstanceId:
          type: string
          description: >
            Identifier for the specific Mobile Payment App instance, unique
            across a given Wallet Identifier. This value cannot be changed after
            digitization. This field is alphanumeric and additionally web-safe
            base64 characters per RFC 4648 (minus "-", underscore "_") up to a
            maximum length of 48, = should not be URL encoded. Conditional - not
            applicable for server based tokens but required otherwise.
          minLength: 1
          maxLength: 48
          example: 123456789
        tokenUniqueReferences:
          type: array
          items:
            type: string
          description: >
            The specific Token to be unsuspended. Array of more or more valid
            references as assigned by MDES
          example: [DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45]
        causedBy:
          type: string
          description: >
            Who or what caused the Token to be unsuspended. Must be either the
            'CARDHOLDER' (operation requested by the Cardholder) or
            'TOKEN_REQUESTOR' (operation requested by the token requestor).
          minLength: 1
          maxLength: 64
          example: CARDHOLDER
        reason:
          type: string
          description: |
            Free form reason for the unsuspension.
          minLength: 1
          maxLength: 256
          example: Device Found
        reasonCode:
          type: string
          description: >
            The reason for the action to be unsuspended. Must be one of 'DEVICE_FOUND', 'NOT_FRAUD' or 'OTHER'
            (Other used if value not provided).
          minLength: 1
          maxLength: 64
          example: DEVICE_FOUND
    UnSuspendResults:
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site1.mastercard.com
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          minLength: 1
          maxLength: 64
          example: 123456
        tokens:
          type: array
          description: State of each Token following this operation
          items:
            $ref: "#/components/schemas/token_for_unsuspend"
    GetTaskStatus:
      required:
        - requestId
        - taskId
        - tokenRequestorId
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        requestId:
          type: string
          description: |
            Unique identifier for the request.
          minLength: 1
          maxLength: 64
          example: 123456
        tokenRequestorId:
          type: string
          description: >
            11-digit numeric ID provided by Mastercard that identifies the Token
            Requestor.
          maxLength: 11
          minLength: 11
          example: 98765432101
        taskId:
          type: string
          description: >
            Unique identifier for this task. Must be an identifier previously
            used when requesting a task.
          minLength: 1
          maxLength: 64
          example: 123456
    GetTaskStatusResults:
      properties:
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          minLength: 1
          maxLength: 64
          example: 123456
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        status:
          type: string
          description: >
            The status of the specified task. Must be either 'PENDING' (The Task
            has been recieved and is pending processing), 'IN_PROGRESS' (The
            task is currently in progress), 'COMPLETED' (The task was completed
            successfully) or 'FAILED' The task was processed but failed to
            complete successfully.
          minLength: 1
          maxLength: 64
          example: FAILED
    SearchTokens:
      required:
        - requestId
      properties:
        requestId:
          type: string
          description: |
            Unique identifier for the request.
          minLength: 1
          maxLength: 64
          example: 123456
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        fundingAccountInfo:
          $ref: "#/components/schemas/fundingAccountInfo"
        tokenRequestorId:
          type: string
          description: >
            Identifies the Token Requestor. Only tokens associated with the
            token requestor will be returned.
          minLength: 11
          maxLength: 11
          example: 98765432101
    SearchTokensResults:
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site1.mastercard.com
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          minLength: 1
          maxLength: 64
          example: 123456
        tokens:
          type: array
          description: State of each Token following this operation.
          items:
            $ref: "#/components/schemas/token"
    GetToken:
      required:
        - requestId
        - tokenUniqueReference
      properties:
        responseHost:
          type: string
          description: >
            The host that originated the request. Future calls in the same
            conversation may be routed to this host.
          minLength: 11
          maxLength: 64
          example: site2.payment-app-provider.com
        requestId:
          type: string
          description: |
            Unique identifier for the request.
          minLength: 1
          maxLength: 64
          example: 123456
        paymentAppInstanceId:
          type: string
          description: >
            Identifier for the specific Mobile Payment App instance, unique
            across a given Wallet Identifier. This value cannot be changed after
            digitization. This field is alphanumeric and additionally web-safe
            base64 characters per RFC 4648 (minus "-", underscore "_") up to a
            maximum length of 48, = should not be URL encoded. Conditional - not
            applicable for server-based tokens but required otherwise.
          minLength: 1
          maxLength: 48
          example: 123456789
        tokenUniqueReference:
          type: string
          description: |
            The specific Token to be queried.
          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        includeTokenDetail:
          type: string
          description: |
            Flag to indicate if the encrypted token should be returned.
          minLength: 4
          maxLength: 5
          example: true
    GetTokenResults:
      properties:
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          minLength: 1
          maxLength: 64
          example: 123456
        token:
          $ref: "#/components/schemas/token_for_getToken"
        tokenDetail:
          $ref: "#/components/schemas/tokenDetail_getToken_Only"
    fundingAccountInfo:
      properties:
        panUniqueReference:
          type: string
          description: >
            **(CONDITIONAL)**

            For repeat digitizations, the unique reference allocated to the Primary Account Number. When supplied, the tokenUniqueReferenceForPanInfo, accountNumber, expiryMonth and expiryYear must be omitted from CardInfoData. Only allowed if Only allowed if tokenUniqueReference and pushAccountReceipt are not present and encrypted data does not contain the account information.
          minLength: 1
          maxLength: 64
          example: FWSPMC000000000159f71f703d2141efaf04dd26803f922b
        tokenUniqueReference:
          type: string
          description: >
            **(CONDITIONAL)**

            A unique reference assigned following the allocation of a token used to identify the token for the duration of its lifetime.  For repeat digitizations, the unique reference allocated to the token will be used to retrieve the financial account information. When supplied, the account information is omitted from FundingAccountData. Only allowed if panUniqueReference and pushAccountReceipt are not present and encrypted data does not contain the account information.

          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        encryptedPayload:
          $ref: "#/components/schemas/fundingAccountInfo-EncryptedPayload"
    fundingAccountInfo-EncryptedPayload:
      properties:
        publicKeyFingerprint:
          type: string
          description: >
            The fingerprint of the public key used to encrypt the ephemeral AES
            key.
          minLength: 32
          maxLength: 64
          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b
        encryptedKey:
          type: string
          description: >
            One-time use AES key encrypted by the MasterCard public key (as
            identified by publicKeyFingerprint) using the OAEP or PKCS#1 v1.5
            scheme (depending on the value of oaepHashingAlgorithm.
          minLength: 32
          maxLength: 512
          example: AA1B2C3D4E5F61122334455667896543
        oaepHashingAlgorithm:
          type: string
          description: >
            Hashing algorithm used with the OAEP scheme. Must be either SHA256
            or SHA512.
          minLength: 6
          maxLength: 6
          example: SHA512
        iv:
          type: string
          description: >
            The initialization vector used when encrypting data using the
            one-time use AES key. Must be exactly 16 bytes (32 character hex
            string) to match the block size. If not present, an IV of zero is
            assumed.
          maxLength: 32
          minLength: 32
          example: 1b9396c98ab2bfd195de661d70905a45
        encryptedData:
          $ref: "#/components/schemas/FundingAccountData"
    FundingAccountData:
      properties:
        cardAccountData:
          $ref: "#/components/schemas/CardAccountData_inbound"
        accountHolderData:
          $ref: "#/components/schemas/accountHolderData"
        source:
          type: string
          description: |
            (**Required as minimum for Tokenization**)
            The source of the account. Must be one of
              * ACCOUNT_ON_FILE
              * ACCOUNT_ADDED_MANUALLY
              * ACCOUNT_ADDED_VIA_APPLICATION
              * EXISTING_TOKEN_CREDENTIAL<br>
                - **NOTE** :Only applicable for certain cross-program enrollment use-cases of [Mastercard Checkout Solutions](https://developer.mastercard.com/mastercard-checkout-solutions/documentation/use-cases/card-on-file/). Please refer to relevant documentation for more info.
          minLength: 1
          maxLength: 32
          example: ACCOUNT_ON_FILE
    accountHolderData:
      properties:
        accountHolderName:
          type: string
          description: >
            **(OPTIONAL)**
            The name of the cardholder in the format LASTNAME/FIRSTNAME or FIRSTNAME LASTNAME
          minLength: 1
          maxLength: 27
          example: John Doe
        accountHolderAddress:
          $ref: "#/components/schemas/billingAddress"
        consumerIdentifier:
          type: string
          description: |
            **(OPTIONAL)**
            Customer Identifier that may be required in some regions.
          minLength: 1
          maxLength: 88
          example: asbhjflk678392hjfuroperd
        accountHolderEmailAddress:
          type: string
          description: |
            **(OPTIONAL)**
            The e-mail address of the Account Holder
          minLength: 6
          maxLength: 320
          example: john.doe@anymail.com
        accountHolderMobilePhoneNumber:
          $ref: "#/components/schemas/PhoneNumber"
    PhoneNumber:
      properties:
        countryDialInCode:
          type: number
          description: >
            **(OPTIONAL)**
            The country code for the phone number. E.g. 1 for US or 44 for UK.
          minLength: 1
          maxLength: 4
          example: "44"
        phoneNumber:
          type: number
          description: |
            **(OPTIONAL)**
            The phone number of the account holder
          minLength: 1
          maxLength: 20
          example: 07777 777 777
    CardAccountData_inbound:
      description: >
        **(CONDITIONAL)**
        Required in Tokenize or Search Tokens unless a
        valid panUniqueReference, tokenUniqueReference or pushAccountReceipt is
        also given in FundingAccountInfo.
      properties:
        accountNumber:
          type: string
          description: >
            The account number of the credit or debit card.
            **(CONDITIONAL)** required in a Tokenize, or Get Digital Asset request,
            unless a valid panUniqueReference or tokenUniqueReference or pushAccountReceipt was given in FundingAccountInfo.
            **NOTE**:Only 6 digits can be supplied in SearchTokens if the TokenUniqueReference is provided in fundingAccountInfo.
          minLength: 9
          maxLength: 19
          example: "5123456789012345"
        expiryMonth:
          type: string
          description: >
            The expiry month for the account. Two numeric digits must be supplied.
            Only supplied in tokenization requests if panUniqueReference or tokenUniqueReferenceForPanInfo or pushAccountReceipt is not present.
            **Format: MM**
          minLength: 2
          maxLength: 2
          example: "09"
        expiryYear:
          type: string
          description: >
            **(Required as minimum for Tokenization)**
            The expiry year for the account.
            Only supplied in tokenization requests if panUniqueReference or tokenUniqueReferenceForPanInfo or pushAccountReceipt is not present.

            **Format: YY**
          minLength: 2
          maxLength: 2
          example: "21"
        securityCode:
          type: string
          description: >
            **(OPTIONAL)**
            The security code for the account can optionally be provided for Tokenization. If provided, the validity will be checked.

            Optional in a Tokenize request, not present otherwise.
          minLength: 3
          maxLength: 3
          example: "123"
    billingAddress:
      properties:
        line1:
          type: string
          description: |
            **(OPTIONAL)**
            The first line of the street address for the billing address.
          minLength: 1
          maxLength: 64
          example: 100 1st Street
        line2:
          type: string
          description: |
            **(OPTIONAL)**
            The second line of the street address for the billing address.
          minLength: 1
          maxLength: 64
          example: Apt. 4B
        city:
          type: string
          description: |
            **(OPTIONAL)**
            The city of the billing address.
          minLength: 1
          maxLength: 32
          example: St. Louis
        countrySubdivision:
          type: string
          description: |
            **(OPTIONAL)**
            The state or country subdivision of the billing address.
          minLength: 1
          maxLength: 12
          example: MO
        postalCode:
          type: string
          description: |
            **(OPTIONAL)**
            The postal of code of the billing address.
          minLength: 1
          maxLength: 16
          example: "61000"
        country:
          type: string
          description: |
            **(OPTIONAL)**
            The country of the billing address. Expressed as a 3-letter (alpha-3) country code as defined in ISO 3166-1.
          minLength: 3
          maxLength: 3
          example: USA
    DecisioningData:
      properties:
        recommendation:
          type: string
          description: >
            **(OPTIONAL)**

            Digitization decision recommended by the Token Requestor. Must be either APPROVED (Recommend a decision of Approved), DECLINED (Recommend a decision of Decline).
          minLength: 1
          maxLength: 64
          example: APPROVED
        recommendationAlgorithmVersion:
          type: string
          description: >
            **(OPTIONAL)**

            Version of the algorithm used by the Token Requestor to determine its recommendation. Must be a value of "01". Other values may be supported in the future.
          minLength: 1
          maxLength: 16
          example: "01"
        deviceScore:
          type: string
          description: >
            **(OPTIONAL)**

            Score assigned by the Token Requestor for the target device being provisioned. Must be a value from 1 to 5.
          minLength: 1
          maxLength: 1
          example: "1"
        accountScore:
          type: string
          description: >
            **(OPTIONAL)**

            Score assigned by the Token Requestor for the consumer account or relationship. Must be a value from 1 to 5.
          minLength: 1
          maxLength: 1
          example: "1"
        recommendationReasons:
          type: array
          description: >
            **(OPTIONAL)**

            Code indicating the reasons the Token Requestor is suggesting the digitization decision.  See table here - https://developer.mastercard.com/mdes-digital-enablement/documentation/code-and-formats/#recommendation-reason-codes
          items:
            type: string
            example: LONG_ACCOUNT_TENURE
            minLength: 1
            maxLength: 64
        deviceCurrentLocation:
          type: string
          description: >
            **(OPTIONAL)**

            Latitude and longitude in the format "(sign) latitude, (sign) longitude" with a precision of 2 decimal places.  Ex - "38.63, -90.25"  Latitude is between -90 and 90.  Longitude between -180 and 180. Relates to the target device being provisioned. If there is no target device, then this should be the current consumer location, if available.
          minLength: 1 
          maxLength: 14
          example: 38.63,-90.25
        deviceIpAddress:
          type: string
          description: >
            **(OPTIONAL)**

            The IP address of the device through which the device reaches the internet. This may be a temporary or permanent IP address assigned to a home router, or the IP address of a gateway through which the device connects to a network. IPv4 address format of 4 octets separated by "." Ex - 127.0.0.1 Relates to the target device being provisioned. If there is no target device, then this should be the current consumer IP address, if available.
          minLength: 7
          maxLength: 15
          example: 127.0.0.1
        mobileNumberSuffix:
          type: string
          description: >
            **(OPTIONAL)**
            The last few digits (typically four) of the consumer's mobile phone number as available on file or on the consumer's current device, which may or may not be the mobile number of the target device being provisioned.
          minLength: 4
          maxLength: 32
          example: "1234"
        accountIdHash:
          type: string
          description: >
            **(OPTIONAL)**
            SHA-256 hash of the Cardholder?s account ID with the Token Requestor. Typically expected to be an email address.
          minLength: 1
          maxLength: 64
          format: Alpha-Numeric and Hex-encoded data (case-insensitive).
          example: 94e09c05c05aa8d183d14aeac628ebb7c0325e80881811f2ac53e81db86eb0b6
    
    tokenInfo:
      required:
        - tokenPanSuffix
        - tokenExpiry
        - dsrpCapable
      properties:
        tokenPanSuffix:
          type: string
          description: |
            The last few digits (typically four) of the Token PAN.
          minLength: 4
          maxLength: 8
          example: "0001"
        accountPanSuffix:
          type: string
          description: |
            The last few digits (typically four) of the Account PAN. 
            Conditional - required if the token is associated to a card, not present otherwise
          minLength: 4
          maxLength: 8
          example: "0011"
        tokenExpiry:
          type: string
          description: |
            The expiry of the Token PAN, given in MMYY format.
          minLength: 4
          maxLength: 4
          example: 1122
        accountPanExpiry:
          type: string
          description: |
            The expiry of the Account PAN, given in MMYY format.
          minLength: 4
          maxLength: 4
          example: 1122
        dsrpCapable:
          type: string
          description: >
            Whether DSRP transactions are supported by this Token. Must be
            either 'true' (DSRP capable) or 'false' (Not DSRP capable).
          minLength: 4
          maxLength: 5
          example: true
        tokenAssuranceLevel:
          type: integer
          description: >
            A value indicating the confidence level of the token to Account PAN
            binding.
          minLength: 1
          maxLength: 2
          example: 3
        productCategory:
          type: string
          description: >
            The product category of the Account PAN. When supplied will be one
            of the following values:

              * CREDIT
              * DEBIT
              * PREPAID
              * UNKNOWN
          minLength: 1
          maxLength: 32
          example: CREDIT
    tokenDetail:
      properties:
        tokenUniqueReference:
          type: string
          description: >
            Globally unique identifier for the Token, as assigned by
            MDES.
          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        publicKeyFingerprint:
          type: string
          description: >
            The certificate fingerprint identifying the public key used to
            encrypt the ephemeral AES key.
          minLength: 32
          maxLength: 64
          format: Hex-encoded data (case-insensitive).
          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b
        encryptedKey:
          type: string
          description: >
            One-time use AES key encrypted by the MasterCard public key (as
            identified by 'publicKeyFingerprint') using the OAEP or RSA
            Encryption Standard PKCS #1 v1.5 scheme (depending on the value of
            'oaepHashingAlgorithm'. Requirement is for a 128-bit key (with
            256-bit key supported as an option).
          minLength: 32
          maxLength: 512
          example: AA1B2C3D4E5F61122334455667896543
        oaepHashingAlgorithm:
          type: string
          description: >
            Hashing algorithm used with the OAEP scheme. If omitted, then the
            RSA Encryption Standard PKCS #1 v1.5 will be used. Must be either
            'SHA256' (Use the SHA-256 algorithm) or 'SHA512' (Use the SHA-512
            algorithm).
          minLength: 6
          maxLength: 6
          example: SHA512
        iv:
          type: string
          description: >
            It is recommended to supply a random initialization vector when
            encrypting the data using the one-time use AES key. Must be exactly
            16 bytes (32 character hex string) to match the block size.
            Hex-encoded data (case-insensitive).
          minLength: 32
          maxLength: 32
          example: 1b9396c98ab2bfd195de661d70905a45
        encryptedData:
          $ref: "#/components/schemas/tokenDetailData"
    tokenDetail_getToken_Only:
      properties:
        tokenUniqueReference:
          type: string
          description: >
            Globally unique identifier for the Token, as assigned by
            MDES.
          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        publicKeyFingerprint:
          type: string
          description: >
            The certificate fingerprint identifying the public key used to
            encrypt the ephemeral AES key.
          minLength: 32
          maxLength: 64
          format: Hex-encoded data (case-insensitive).
          example: 4c4ead5927f0df8117f178eea9308daa58e27c2b
        encryptedKey:
          type: string
          description: >
            One-time use AES key encrypted by the MasterCard public key (as
            identified by 'publicKeyFingerprint') using the OAEP or RSA
            Encryption Standard PKCS #1 v1.5 scheme (depending on the value of
            'oaepHashingAlgorithm'. Requirement is for a 128-bit key (with
            256-bit key supported as an option).
          minLength: 32
          maxLength: 512
          example: AA1B2C3D4E5F61122334455667896543
        oaepHashingAlgorithm:
          type: string
          description: >
            Hashing algorithm used with the OAEP scheme. If omitted, then the
            RSA Encryption Standard PKCS #1 v1.5 will be used. Must be either
            'SHA256' (Use the SHA-256 algorithm) or 'SHA512' (Use the SHA-512
            algorithm).
          minLength: 6
          maxLength: 6
          example: SHA512
        iv:
          type: string
          description: >
            It is recommended to supply a random initialization vector when
            encrypting the data using the one-time use AES key. Must be exactly
            16 bytes (32 character hex string) to match the block size.
            Hex-encoded data (case-insensitive).
          minLength: 32
          maxLength: 32
          example: 1b9396c98ab2bfd195de661d70905a45
        encryptedData:
          $ref: "#/components/schemas/tokenDetailData_getToken_Only"
    tokenDetailData:
      properties:
        tokenNumber:
          type: string
          description: >
            The Token Primary Account Number of the card. 
            Conditional – required if tokenType = STATIC or in Tokenize when Storage Technology is specified as "SERVER"
          minLength: 9
          maxLength: 19
          example: 5123456789012345
        expiryMonth:
          type: string
          description: >
            The month of the token expiration date.
            Conditional – required if tokenType = STATIC or in Tokenize when Storage Technology is specified as "SERVER"
          minLength: 2
          maxLength: 2
          example: 12
        expiryYear:
          type: string
          description: >
            The year of the token expiration date.
            Conditional – required if tokenType = STATIC or in Tokenize when Storage Technology is specified as "SERVER"
          minLength: 2
          maxLength: 2
          example: 18
        dataValidUntilTimestamp:
          type: string
          description: >
            The date/time after which this encrypted object is considered invalid. If present, all systems must reject this encrypted object after this time and treat it as invalid data. Must be expressed in ISO 8601 extended format as one of the following:
              - YYYY-MM-DDThh:mm:ss[.sss]Z
              - YYYY-MM-DDThh:mm:ss[.sss]±hh:mm

            Where [.sss] is optional and can be 1 to 3 digits. Must be a value no more than 30 days in the future. Mastercard recommends using a value of (Current Time + 30 minutes).
          minLength: 20
          maxLength: 29
          example: 2022-07-04T12:08:56.123-07:00
        paymentAccountReference:
          type: string
          description: >
            "The unique account reference assigned to the PAN. Conditionally
            returned if the Token Requestor has opted to receive PAR and
            providing PAR is assigned by Mastercard or the Issuer provides PAR
            in the authorization message response."
          minLength: 29
          maxLength: 29
          example: 5001a9f027e5629d11e3949a0800a
    tokenDetailData_getToken_Only:
      properties:
        tokenNumber:
          type: string
          description: >
            The Token Primary Account Number of the Card.
          maxLength: 19
          minLength: 9
          example: 5123456789012345
        expiryMonth:
          type: string
          description: |
            The month of the token expiration date.
          minLength: 2
          maxLength: 2
          example: 12
        expiryYear:
          type: string
          description: |
            The year of the token expiration date.
          minLength: 2
          maxLength: 2
          example: 18
        paymentAccountReference:
          type: string
          description: >
            The unique account reference assigned to the PAN. Conditionally
            returned if the Token Requestor has opted to receive PAR and
            providing PAR is assigned by Mastercard or the Issuer provides PAR
            in the authorization message response.
          minLength: 29
          maxLength: 29
          example: 5001a9f027e5629d11e3949a0800a
    authenticationMethods:
      description: |
        "authenticationMethods not currently used for MDES for Merchants"
      properties:
        id:
          type: string
          description: |
            Unique identifier assigned to this Authentication Method.
          minLength: 1
          maxLength: 32
          example: 334123523456213450000
        type:
          type: string
          description: >
            Specifies the authentication method type and provided in the
            tokenize response.  See table here -
            https://developer.mastercard.com/mdes-digital-enablement/documentation/code-and-formats/#authentication-method-codes
          minLength: 1
          maxLength: 64
          example: TEXT_TO_CARDHOLDER_NUMBER
        value:
          type: string
          description: >
            Specifies the authentication method value (meaning varies depending
            on the authentication method type).
          minLength: 1
          maxLength: 64  
          example: 1
    token:
      properties:
        tokenUniqueReference:
          type: string
          description: >
            The unique reference allocated to the Token which is always present
            even if an error occurs.
          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        status:
          type: string
          description: |
            The current status of Token. Must be either:
             * 'INACTIVE' (Token has not yet been activated)
             * 'ACTIVE' (Token is active and ready to transact)
             * 'SUSPENDED' (Token is suspended and unable to transact)
             * 'DEACTIVATED' (Token has been permanently deactivated).
          minLength: 1
          maxLength: 32
          example: SUSPENDED
        suspendedBy:
          type: array
          items:
            type: string
            example: CARDHOLDER
          description: >
            (CONDITIONAL only supplied if status is SUSPENDED)
            Who or what caused the Token to be suspended One or more values of:
               * ISSUER - Suspended by the Issuer.
               * TOKEN_REQUESTOR - Suspended by the Token Requestor
               * MOBILE_PIN_LOCKED - Suspended due to the Mobile PIN being locked
               * CARDHOLDER - Suspended by the Cardholder
        statusTimestamp:
          type: string
          description: >
            The date and time the token status was last updated. Expressed in
            ISO 8601 extended format as one of the following:
               * YYYY-MM-DDThh:mm:ss[.sss]Z
               * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm
               * Where [.sss] is optional and can be 1 to 3 digits.
          minLength: 20
          maxLength: 29
          example: 2017-07-20T04:56:23.345-07:00
        productConfig:
          $ref: "#/components/schemas/productConfig"
        tokenInfo:
          $ref: "#/components/schemas/tokenInfo"
    token_for_getToken:
      properties:
        tokenUniqueReference:
          type: string
          description: >
            The unique reference allocated to the Token which is always present
            even if an error occurs.
          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        tokenRequestorId:
          type: string
          description: >
            Identifies the Token Requestor. <br>
          minLength: 11
          maxLength: 11
          example: "98765432101"
        status:
          type: string
          description: |
            The current status of Token. Must be either:
             * 'INACTIVE' (Token has not yet been activated)
             * 'ACTIVE' (Token is active and ready to transact)
             * 'SUSPENDED' (Token is suspended and unable to transact)
             * 'DEACTIVATED' (Token has been permanently deactivated).
          minLength: 1
          maxLength: 32
          example: SUSPENDED
        suspendedBy:
          type: array
          items:
            type: string
            example: CARDHOLDER
          description: >
            (CONDITIONAL only supplied if status is SUSPENDED)
            Who or what caused the Token to be suspended One or more values of:
               * ISSUER - Suspended by the Issuer.
               * TOKEN_REQUESTOR - Suspended by the Token Requestor
               * MOBILE_PIN_LOCKED - Suspended due to the Mobile PIN being locked
               * CARDHOLDER - Suspended by the Cardholder
        statusTimestamp:
          type: string
          description: >
            The date and time the token status was last updated. Expressed in
            ISO 8601 extended format as one of the following:
               * YYYY-MM-DDThh:mm:ss[.sss]Z
               * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm
               * Where [.sss] is optional and can be 1 to 3 digits.
          minLength: 20
          maxLength: 29
          example: 2017-07-20T04:56:23.345-07:00
        productConfig:
          $ref: "#/components/schemas/productConfig"
        tokenInfo:
          $ref: "#/components/schemas/tokenInfo_for_NTU_and_getToken"
    
    token_for_LCM:
      properties:
        tokenUniqueReference:
          type: string
          description: >
            The unique reference allocated to the Token which is always present
            even if an error occurs.
          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        status:
          type: string
          description: |
            The current status of Token. Must be either:
             * 'INACTIVE' (Token has not yet been activated)
             * 'ACTIVE' (Token is active and ready to transact)
             * 'SUSPENDED' (Token is suspended and unable to transact)
             * 'DEACTIVATED' (Token has been permanently deactivated).
          minLength: 1
          maxLength: 32
          example: SUSPENDED
        suspendedBy:
          type: array
          items:
            type: string
            example: CARDHOLDER
          description: >
            (CONDITIONAL only supplied if status is SUSPENDED)
            Who or what caused the Token to be suspended One or more values of:
               * ISSUER - Suspended by the Issuer.
               * TOKEN_REQUESTOR - Suspended by the Token Requestor
               * MOBILE_PIN_LOCKED - Suspended due to the Mobile PIN being locked
               * CARDHOLDER - Suspended by the Cardholder
        statusTimestamp:
          type: string
          description: >
            The date and time the token status was last updated. Expressed in
            ISO 8601 extended format as one of the following:
               * YYYY-MM-DDThh:mm:ss[.sss]Z
               * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm
               * Where [.sss] is optional and can be 1 to 3 digits.
          minLength: 20
          maxLength: 29
          example: 2022-07-20T04:56:23.345-07:00
    
    token_for_unsuspend:
      properties:
        tokenUniqueReference:
          type: string
          description: >
            The unique reference allocated to the Token which is always present
            even if an error occurs.
          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        status:
          type: string
          description: |
            The current status of Token. Must be either:
             * 'INACTIVE' (Token has not yet been activated)
             * 'ACTIVE' (Token is active and ready to transact)
             * 'SUSPENDED' (Token is suspended and unable to transact)
             * 'DEACTIVATED' (Token has been permanently deactivated).
          minLength: 1
          maxLength: 32
          example: ACTIVE
        statusTimestamp:
          type: string
          description: >
            The date and time the token status was last updated. Expressed in
            ISO 8601 extended format as one of the following:
               * YYYY-MM-DDThh:mm:ss[.sss]Z
               * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm
               * Where [.sss] is optional and can be 1 to 3 digits.
          minLength: 20
          maxLength: 29
          example: 2022-07-20T04:56:23.345-07:00
    
    token_for_delete:
      properties:
        tokenUniqueReference:
          type: string
          description: >
            The unique reference allocated to the Token which is always present
            even if an error occurs.
          minLength: 48
          maxLength: 64
          example: DWSPMC000000000132d72d4fcb2f4136a0532d3093ff1a45
        status:
          type: string
          description: |
            The current status of Token. Must be 
             * 'DEACTIVATED' (Token has been permanently deactivated).
          minLength: 1
          maxLength: 32
          example: DEACTIVATED
        statusTimestamp:
          type: string
          description: >
            The date and time the token status was last updated. Expressed in
            ISO 8601 extended format as one of the following:
               * YYYY-MM-DDThh:mm:ss[.sss]Z
               * YYYY-MM-DDThh:mm:ss[.sss]±hh:mm
               * Where [.sss] is optional and can be 1 to 3 digits.
          minLength: 20
          maxLength: 29
          example: 2022-07-20T04:56:23.345-07:00
    TransactError:
      description: Only returned in the event of an error condition for the Transact API
      properties:
        source:
          type: string
          description: >
            An element used to indicate the source of the issue causing this
            error. Must be one of
             * 'MDES'
             * 'INPUT'
          maxLength: 32
        errorCode:
          type: string
          description: >
            A reason code or information pertaining to the error that has
            occurred. This will contain the error reported by the platform (e.g.
            authentication errors) or service (e.g. invalid TUR)

          maxLength: 100
        description:
          type: string
          description: |
            Description of the reason why the operation failed.
          maxLength: 256
        reasonCode:
          type: string
          description: >
            A reason code or information pertaining to the error that has
            occurred from the service (e.g. invalid TUR). See API Response
            Errors

          maxLength: 100
        errorDescription:
          type: string
          description: |
            **DEPRECATED**
            Use description instead.
          maxLength: 100
    ErrorsResponse:
      properties:
        errorCode:
          type: string
          description: >
            **CONDITIONAL**
            Returned in the event of an error and contains
            the reason the operation failed. Only use if errors object is not
            present.
          maxLength: 32
          example: INVALID_TOKEN_UNIQUE_REFERENCE
        errorDescription:
          type: string
          description: >
            **CONDITIONAL**
            Returned in the event of an error and contains a
            description of why the operation failed. Only use if errors object
            is not present.
          maxLength: 32
          example: Invalid Token Unique Reference
        responseHost:
          type: string
          description: >
            The Mastercard host that originated the request. Future calls in the
            same conversation may be routed to this host.
          example: site2.payment-app-provider.com
        responseId:
          type: string
          description: |
            Unique identifier for the response.
          example: 123456
        Errors:
          $ref: "#/components/schemas/Error"
    Error:
      description: Only returned in the event of an error condition.
      properties:
        source:
          type: string
          description: >
            An element used to indicate the source of the issue causing this
            error. Must be one of
             * 'MDES'
             * 'INPUT'
          maxLength: 32
          example: INPUT
        errorCode:
          type: string
          description: >
            An error code generated by the gateway if the error occurs before
            reaching the MDES application.
          maxLength: 100
          example: E0010097
        description: 
          type: string
          description: >
            Description of the reason the operation failed. See API Response Errors
          maxLength: 256
          example: Invalid Field Length - EncryptedAccountInformation.Iv
        reasonCode:
          type: string
          description: |
            A reason code for the error that has occurred.
          maxLength: 100
          example: INVALID_FIELD_LENGTH
        recoverable:
          type: boolean
          description: >
            Generated by the gateway to indicate if the request could presented
            again for processing. Either "TRUE" or "FALSE"
          example: "TRUE"